<?xml version="1.0" encoding="UTF-8" standalone="no"?><!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops" xmlns:m="http://www.w3.org/1998/Math/MathML" xmlns:pls="http://www.w3.org/2005/01/pronunciation-lexicon" xmlns:ssml="http://www.w3.org/2001/10/synthesis" xmlns:svg="http://www.w3.org/2000/svg"><head><title>Chapter 4. Analytics</title><link rel="stylesheet" type="text/css" href="docbook-epub.css"/><meta name="generator" content="DocBook XSL Stylesheets V1.78.1"/><link rel="prev" href="ch03.xhtml" title="Chapter 3. Task / Batch"/><link rel="next" href="ch05.xhtml" title="Chapter 5. Functions"/></head><body><header/><section class="chapter" title="Chapter 4. Analytics" epub:type="chapter" id="_analytics"><div class="titlepage"><div><div><h1 class="title">Chapter 4. Analytics</h1></div></div></div><section class="section" title="Twitter Analytics" epub:type="subchapter" id="spring-cloud-data-flow-samples-twitter-analytics-overview"><div class="titlepage"><div><div><h2 class="title" style="clear: both">Twitter Analytics</h2></div></div></div><p>In this demonstration, you will learn how to build a data pipeline using <a class="link" href="http://cloud.spring.io/spring-cloud-dataflow/" target="_top">Spring Cloud Data Flow</a> to consume data from <span class="emphasis"><em>TwitterStream</em></span> and compute simple analytics over data-in-transit using <span class="emphasis"><em>Field-Value-Counter</em></span>.</p><p>We will take you through the steps to configure Spring Cloud Data Flow’s <code class="literal">Local</code> server.</p><section class="section" title="Prerequisites" epub:type="division" id="_prerequisites_8"><div class="titlepage"><div><div><h3 class="title">Prerequisites</h3></div></div></div><div class="itemizedlist" epub:type="list"><ul class="itemizedlist" style="list-style-type: disc; "><li class="listitem" epub:type="list-item">A Running Data Flow Shell</li></ul></div><p>The Spring Cloud Data Flow Shell is available for <a class="link" href="https://docs.spring.io/spring-cloud-dataflow/docs/current/reference/htmlsingle/#getting-started-deploying-spring-cloud-dataflow" target="_top">download</a> or you can <a class="link" href="https://github.com/spring-cloud/spring-cloud-dataflow" target="_top">build</a> it yourself.</p><div class="note" title="Note" epub:type="notice"><table style="border: 0; "><tr><td style="text-align: center; vertical-align: top; width: 25; " rowspan="2"><img alt="[Note]" src="images/note.png"/></td><th style="text-align: left; ">Note</th></tr><tr><td style="text-align: left; vertical-align: top; "><p>the Spring Cloud Data Flow Shell and Local server implementation are in the same repository and are both built by running <code class="literal">./mvnw install</code> from the project root directory. If you have already run the build, use the jar in <code class="literal">spring-cloud-dataflow-shell/target</code></p></td></tr></table></div><p>To run the Shell open a new terminal session:</p><pre class="screen">$ cd &lt;PATH/TO/SPRING-CLOUD-DATAFLOW-SHELL-JAR&gt;
$ java -jar spring-cloud-dataflow-shell-&lt;VERSION&gt;.jar
  ____                              ____ _                __
 / ___| _ __  _ __(_)_ __   __ _   / ___| | ___  _   _  __| |
 \___ \| '_ \| '__| | '_ \ / _` | | |   | |/ _ \| | | |/ _` |
  ___) | |_) | |  | | | | | (_| | | |___| | (_) | |_| | (_| |
 |____/| .__/|_|  |_|_| |_|\__, |  \____|_|\___/ \__,_|\__,_|
  ____ |_|    _          __|___/                 __________
 |  _ \  __ _| |_ __ _  |  ___| | _____      __  \ \ \ \ \ \
 | | | |/ _` | __/ _` | | |_  | |/ _ \ \ /\ / /   \ \ \ \ \ \
 | |_| | (_| | || (_| | |  _| | | (_) \ V  V /    / / / / / /
 |____/ \__,_|\__\__,_| |_|   |_|\___/ \_/\_/    /_/_/_/_/_/


Welcome to the Spring Cloud Data Flow shell. For assistance hit TAB or type "help".
dataflow:&gt;</pre><div class="note" title="Note" epub:type="notice"><table style="border: 0; "><tr><td style="text-align: center; vertical-align: top; width: 25; " rowspan="2"><img alt="[Note]" src="images/note.png"/></td><th style="text-align: left; ">Note</th></tr><tr><td style="text-align: left; vertical-align: top; "><p>The Spring Cloud Data Flow Shell is a Spring Boot application that connects to the Data Flow Server’s REST API and supports a DSL that simplifies the process of defining a stream or task and managing its lifecycle. Most of these samples
use the shell. If you prefer, you can use the Data Flow UI <a class="link" href="http://localhost:9393/dashboard" target="_top">localhost:9393/dashboard</a>, (or wherever it the server is hosted) to perform the same operations.</p></td></tr></table></div><div class="itemizedlist" epub:type="list"><ul class="itemizedlist" style="list-style-type: disc; "><li class="listitem" epub:type="list-item">A running local Data Flow Server</li></ul></div><p>The Local Data Flow Server is Spring Boot application available for <a class="link" href="http://cloud.spring.io/spring-cloud-dataflow/" target="_top">download</a> or you can <a class="link" href="https://github.com/spring-cloud/spring-cloud-dataflow" target="_top">build</a> it yourself.
If you build it yourself, the executable jar will be in <code class="literal">spring-cloud-dataflow-server-local/target</code></p><p>To run the Local Data Flow server Open a new terminal session:</p><pre class="screen">$cd  &lt;PATH/TO/SPRING-CLOUD-DATAFLOW-LOCAL-JAR&gt;
$java -jar spring-cloud-dataflow-server-local-&lt;VERSION&gt;.jar</pre><div class="itemizedlist" epub:type="list"><ul class="itemizedlist" style="list-style-type: disc; "><li class="listitem" epub:type="list-item">Running instance of <a class="link" href="http://redis.io/" target="_top">Redis</a></li><li class="listitem" epub:type="list-item">Running instance of <a class="link" href="http://kafka.apache.org/downloads.html" target="_top">Kafka</a></li><li class="listitem" epub:type="list-item"><p class="simpara">Twitter credentials from <a class="link" href="https://apps.twitter.com/" target="_top">Twitter Developers</a> site</p><div class="orderedlist" epub:type="list"><ol class="orderedlist" type="1"><li class="listitem" epub:type="list-item"><p class="simpara"><a class="link" href="https://github.com/spring-cloud/spring-cloud-dataflow/blob/master/spring-cloud-dataflow-docs/src/main/asciidoc/streams.adoc#register-a-stream-app" target="_top">Register</a> the out-of-the-box applications for the Kafka binder</p><div class="note" title="Note" epub:type="notice"><table style="border: 0; "><tr><td style="text-align: center; vertical-align: top; width: 25; " rowspan="2"><img alt="[Note]" src="images/note.png"/></td><th style="text-align: left; ">Note</th></tr><tr><td style="text-align: left; vertical-align: top; "><p>These samples assume that the Data Flow Server can access a remote Maven repository, <code class="literal"><a class="link" href="https://repo.spring.io/libs-release" target="_top">repo.spring.io/libs-release</a></code> by default. If your Data Flow server is running behind a firewall, or you are using a maven proxy preventing
access to public repositories, you will need to install the sample apps in your internal Maven repository and <a class="link" href="https://docs.spring.io/spring-cloud-dataflow/docs/current/reference/htmlsingle/#getting-started-maven-configuration" target="_top">configure</a>
the server accordingly.  The sample applications are typically registered using Data Flow’s bulk import facility. For example, the Shell command <code class="literal">dataflow:&gt;app import --uri <a class="link" href="http://bit.ly/Bacon-RELEASE-stream-applications-rabbit-maven" target="_top">bit.ly/Bacon-RELEASE-stream-applications-rabbit-maven</a></code> (The actual URI is release and binder specific so refer to the sample instructions for the actual URL).
The bulk import URI references a plain text file containing entries for all of the publicly available Spring Cloud Stream and Task applications published to <code class="literal"><a class="link" href="https://repo.spring.io" target="_top">repo.spring.io</a></code>. For example,
<code class="literal">source.http=maven://org.springframework.cloud.stream.app:http-source-rabbit:1.2.0.RELEASE</code> registers the <code class="literal">http</code> source app at the corresponding Maven address, relative to the remote repository(ies) configured for the
Data Flow server. The format is <code class="literal">maven://&lt;groupId&gt;:&lt;artifactId&gt;:&lt;version&gt;</code>  You will need to <a class="link" href="https://repo.spring.io/libs-release/org/springframework/cloud/stream/app/spring-cloud-stream-app-descriptor/Bacon.RELEASE/spring-cloud-stream-app-descriptor-Bacon.RELEASE.rabbit-apps-maven-repo-url.properties" target="_top">download</a> the required apps or <a class="link" href="https://github.com/spring-cloud-stream-app-starters" target="_top">build</a> them and then install them in your Maven repository, using whatever group, artifact, and version you choose. If you do
this, register individual apps using <code class="literal">dataflow:&gt;app register…​</code> using the <code class="literal">maven://</code> resource URI format corresponding to your installed app.</p></td></tr></table></div><pre class="screen">dataflow:&gt;app import --uri http://bit.ly/Bacon-RELEASE-stream-applications-kafka-10-maven</pre></li><li class="listitem" epub:type="list-item"><p class="simpara">Create and deploy the following streams</p><pre class="screen">(1) dataflow:&gt;stream create tweets --definition "twitterstream --consumerKey=&lt;CONSUMER_KEY&gt; --consumerSecret=&lt;CONSUMER_SECRET&gt; --accessToken=&lt;ACCESS_TOKEN&gt; --accessTokenSecret=&lt;ACCESS_TOKEN_SECRET&gt; | log"
Created new stream 'tweets'

(2) dataflow:&gt;stream create tweetlang  --definition ":tweets.twitterstream &gt; field-value-counter --fieldName=lang --name=language" --deploy
Created and deployed new stream 'tweetlang'

(3) dataflow:&gt;stream create tagcount --definition ":tweets.twitterstream &gt; field-value-counter --fieldName=entities.hashtags.text --name=hashtags" --deploy
Created and deployed new stream 'tagcount'

(4) dataflow:&gt;stream deploy tweets
Deployed stream 'tweets'</pre><div class="note" title="Note" epub:type="notice"><table style="border: 0; "><tr><td style="text-align: center; vertical-align: top; width: 25; " rowspan="2"><img alt="[Note]" src="images/note.png"/></td><th style="text-align: left; ">Note</th></tr><tr><td style="text-align: left; vertical-align: top; "><p>To get a consumerKey and consumerSecret you need to register a twitter application. If you don’t already have one set up, you can create an app at the <a class="link" href="https://apps.twitter.com/" target="_top">Twitter Developers</a> site to get these credentials. The tokens <code class="literal">&lt;CONSUMER_KEY&gt;</code>, <code class="literal">&lt;CONSUMER_SECRET&gt;</code>, <code class="literal">&lt;ACCESS_TOKEN&gt;</code>, and <code class="literal">&lt;ACCESS_TOKEN_SECRET&gt;</code> are required to be replaced with your account credentials.</p></td></tr></table></div></li><li class="listitem" epub:type="list-item"><p class="simpara">Verify the streams are successfully deployed. Where: (1) is the primary pipeline; (2) and (3) are tapping the primary pipeline with the DSL syntax <code class="literal">&lt;stream-name&gt;.&lt;label/app name&gt;</code> [e.x. <code class="literal">:tweets.twitterstream</code>]; and (4) is the final deployment of primary pipeline</p><pre class="screen">dataflow:&gt;stream list</pre></li><li class="listitem" epub:type="list-item"><p class="simpara">Notice that <code class="literal">tweetlang.field-value-counter</code>, <code class="literal">tagcount.field-value-counter</code>, <code class="literal">tweets.log</code> and <code class="literal">tweets.twitterstream</code> <a class="link" href="https://github.com/spring-cloud-stream-app-starters/" target="_top">Spring Cloud Stream</a> applications are running as Spring Boot applications within the <code class="literal">local-server</code>.</p><pre class="screen">2016-02-16 11:43:26.174  INFO 10189 --- [nio-9393-exec-2] o.s.c.d.d.l.OutOfProcessModuleDeployer   : deploying module org.springframework.cloud.stream.module:field-value-counter-sink:jar:exec:1.0.0.BUILD-SNAPSHOT instance 0
   Logs will be in /var/folders/c3/ctx7_rns6x30tq7rb76wzqwr0000gp/T/spring-cloud-data-flow-6990537012958280418/tweetlang-1455651806160/tweetlang.field-value-counter
2016-02-16 11:43:26.206  INFO 10189 --- [nio-9393-exec-3] o.s.c.d.d.l.OutOfProcessModuleDeployer   : deploying module org.springframework.cloud.stream.module:field-value-counter-sink:jar:exec:1.0.0.BUILD-SNAPSHOT instance 0
   Logs will be in /var/folders/c3/ctx7_rns6x30tq7rb76wzqwr0000gp/T/spring-cloud-data-flow-6990537012958280418/tagcount-1455651806202/tagcount.field-value-counter
2016-02-16 11:43:26.806  INFO 10189 --- [nio-9393-exec-4] o.s.c.d.d.l.OutOfProcessModuleDeployer   : deploying module org.springframework.cloud.stream.module:log-sink:jar:exec:1.0.0.BUILD-SNAPSHOT instance 0
   Logs will be in /var/folders/c3/ctx7_rns6x30tq7rb76wzqwr0000gp/T/spring-cloud-data-flow-6990537012958280418/tweets-1455651806800/tweets.log
2016-02-16 11:43:26.813  INFO 10189 --- [nio-9393-exec-4] o.s.c.d.d.l.OutOfProcessModuleDeployer   : deploying module org.springframework.cloud.stream.module:twitterstream-source:jar:exec:1.0.0.BUILD-SNAPSHOT instance 0
   Logs will be in /var/folders/c3/ctx7_rns6x30tq7rb76wzqwr0000gp/T/spring-cloud-data-flow-6990537012958280418/tweets-1455651806800/tweets.twitterstream</pre></li><li class="listitem" epub:type="list-item"><p class="simpara">Verify that two <code class="literal">field-value-counter</code> with the names <code class="literal">hashtags</code> and <code class="literal">language</code> is listing successfully</p><pre class="screen">dataflow:&gt;field-value-counter list
╔════════════════════════╗
║Field Value Counter name║
╠════════════════════════╣
║hashtags                ║
║language                ║
╚════════════════════════╝</pre></li><li class="listitem" epub:type="list-item"><p class="simpara">Verify you can query individual <code class="literal">field-value-counter</code> results successfully</p><pre class="screen">dataflow:&gt;field-value-counter display hashtags
Displaying values for field value counter 'hashtags'
╔══════════════════════════════════════╤═════╗
║                Value                 │Count║
╠══════════════════════════════════════╪═════╣
║KCA                                   │   40║
║PENNYSTOCKS                           │   17║
║TEAMBILLIONAIRE                       │   17║
║UCL                                   │   11║
║...                                   │   ..║
║...                                   │   ..║
║...                                   │   ..║
╚══════════════════════════════════════╧═════╝

dataflow:&gt;field-value-counter display language
Displaying values for field value counter 'language'
╔═════╤═════╗
║Value│Count║
╠═════╪═════╣
║en   │1,171║
║es   │  337║
║ar   │  296║
║und  │  251║
║pt   │  175║
║ja   │  137║
║..   │  ...║
║..   │  ...║
║..   │  ...║
╚═════╧═════╝</pre></li><li class="listitem" epub:type="list-item"><p class="simpara">Go to <code class="literal">Dashboard</code> accessible at <code class="literal"><a class="link" href="http://localhost:9393/dashboard" target="_top">localhost:9393/dashboard</a></code> and launch the <code class="literal">Analytics</code> tab. From the default <code class="literal">Dashboard</code> menu, select the following combinations to visualize real-time updates on <code class="literal">field-value-counter</code>.</p><div class="itemizedlist" epub:type="list"><ul class="itemizedlist" style="list-style-type: circle; "><li class="listitem" epub:type="list-item"><p class="simpara">For real-time updates on <code class="literal">language</code> tags, select:</p><div class="orderedlist" epub:type="list"><ol class="orderedlist" type="a"><li class="listitem" epub:type="list-item">Metric Type as <code class="literal">Field-Value-Counters</code></li><li class="listitem" epub:type="list-item">Stream as <code class="literal">language</code></li><li class="listitem" epub:type="list-item">Visualization as <code class="literal">Bubble-Chart</code> or <code class="literal">Pie-Chart</code></li></ol></div></li><li class="listitem" epub:type="list-item"><p class="simpara">For real-time updates on <code class="literal">hashtags</code> tags, select:</p><div class="orderedlist" epub:type="list"><ol class="orderedlist" type="a"><li class="listitem" epub:type="list-item">Metric Type as <code class="literal">Field-Value-Counters</code></li><li class="listitem" epub:type="list-item">Stream as <code class="literal">hashtags</code></li><li class="listitem" epub:type="list-item">Visualization as <code class="literal">Bubble-Chart</code> or <code class="literal">Pie-Chart</code></li></ol></div></li></ul></div></li></ol></div></li></ul></div><div class="informalfigure"><div class="mediaobject"><table style="border: 0; width: 50%; cellpadding: 0; cellspacing: 0;"><tr><td><img src="images/twitter_analytics.png" width="100%" alt="Twitter Analytics Visualization"/></td></tr></table></div></div></section><section class="section" title="Summary" epub:type="division" id="_summary_8"><div class="titlepage"><div><div><h3 class="title">Summary</h3></div></div></div><p>In this sample, you have learned:</p><div class="itemizedlist" epub:type="list"><ul class="itemizedlist" style="list-style-type: disc; "><li class="listitem" epub:type="list-item">How to use Spring Cloud Data Flow’s <code class="literal">Local</code> server</li><li class="listitem" epub:type="list-item">How to use Spring Cloud Data Flow’s <code class="literal">shell</code> application</li><li class="listitem" epub:type="list-item">How to create streaming data pipeline to compute simple analytics using <code class="literal">Twitter Stream</code> and <code class="literal">Field Value Counter</code> applications</li></ul></div></section></section></section><footer/></body></html>