name: CI

on:
  workflow_dispatch:
#     inputs:
#       accessToken:
#         description: 'JFrog AT'
#         required: true
  push:
#    branches:
#      - 'main'
#    paths:
#      - 'scenario-task'
    paths-ignore:
      - '.github/**'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    name: CI Build
    steps:
      - uses: actions/checkout@v2
      - uses: jvalkeal/setup-maven@v1
        with:
          maven-version: 3.8.4
      - uses: actions/setup-java@v2
        with:
          distribution: adopt
          java-version: 8
      - uses: jfrog/setup-jfrog-cli@v1
        with:
          version: 1.46.4
#         env:
#           JF_ARTIFACTORY_SPRING: 'foo'
      - name: Configure JFrog Cli
        run: |
        
          jfrog config add onobc.spring.io \
            --artifactory-url=https://repo.spring.io/artifactory \
            --access-token=${{ secrets.JAT }} 
          
          jfrog rt mvnc \
            --server-id-resolve=onobc.spring.io \
            --server-id-deploy=onobc.spring.io \
            --repo-resolve-releases=libs-milestone \
            --repo-resolve-snapshots=libs-snapshot \
            --repo-deploy-releases=release \
            --repo-deploy-snapshots=snapshot
            
          echo JFROG_CLI_BUILD_NUMBER=$GITHUB_RUN_NUMBER >> $GITHUB_ENV
          
          jfrog rt ping 

      - name: Build kafka-samples
        run: ./mvnw -B package
        working-directory: kafka-samples

      - name: Publish kafka-samples
        run: |
          jfrog rt mvn \
            --build-name=scdf-samples/kafka-samples \
            --build-number=$GITHUB_RUN_NUMBER \
            -B clean install -DskipTests
          jfrog rt build-publish
        working-directory: kafka-samples

      - name: Build multio-samples/ticktock
        run: ./mvnw -B package
        working-directory: multio-samples/ticktock

#  publish:
#    needs: [build]
#    name: Call Publish Snapshot
#    uses: spring-cloud/spring-cloud-dataflow-samples/.github/workflows/ci-publish.yml@main
#    secrets:
#      jfArtifactorySpring: ${{ secrets.JF_ARTIFACTORY_SPRING }}
