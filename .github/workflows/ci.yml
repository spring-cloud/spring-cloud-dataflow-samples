name: CI

on:
  workflow_dispatch:
  push:
    paths-ignore:
      - '.github/**'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    name: CI Build
    steps:
      - uses: actions/checkout@v2
      - uses: jvalkeal/setup-maven@v1
        with:
          maven-version: 3.8.4
      - uses: actions/setup-java@v2
        with:
          distribution: adopt
          java-version: 8
          cache: maven
      - uses: jfrog/setup-jfrog-cli@v1
        with:
          version: 1.46.4
#      env:
#        JF_ARTIFACTORY_SPRING: ${{ secrets.jfArtifactorySpring }}

      - name: Build multi-io-samples/purchase-orders/http-purchase-orders
        run: ./mvnw clean install jib:dockerBuild
        working-directory: multi-io-samples/purchase-orders/http-purchase-orders
        
      - name: Publish to Registry
        uses: elgohr/Publish-Docker-Github-Action@3.0.4
        with:
          name: springcloudstream/multi-io-sample-http-purchase-orders
          #onobc/scdf-samples/springcloudstream/multi-io-sample-http-purchase-orders
          username: ${{ secrets.docker.hub.username }}
          password: ${{ secrets.docker.hub.password }}

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.docker.hub.username }}
          password: ${{ secrets.docker.hub.password }}
          
      - name: Push to Docker Hub
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: springcloudstream/multi-io-sample-http-purchase-orders
          #tags: ${{ secrets.dockerHubUsername }}/scdf-samples/simplewhale:latest
          
          
      - name: Configure JFrog Cli
        run: |
          
          jfrog config add onobc.spring.io \
            --artifactory-url=https://repo.spring.io/artifactory \
            --access-token=${{ secrets.JAT }} 
          
          jfrog rt mvnc \
            --server-id-resolve=onobc.spring.io \
            --server-id-deploy=onobc.spring.io \
            --repo-resolve-releases=libs-milestone \
            --repo-resolve-snapshots=libs-snapshot \
            --repo-deploy-releases=release \
            --repo-deploy-snapshots=snapshot
          
          echo JFROG_CLI_BUILD_NAME=spring-cloud-dataflow-samples >> $GITHUB_ENV
          echo JFROG_CLI_BUILD_NUMBER=$GITHUB_RUN_NUMBER >> $GITHUB_ENV


      - name: Build kafka-samples
        run: ./mvnw -B package
        working-directory: kafka-samples


      - name: Publish kafka-samples
        run: |
          jfrog rt ping
#          jfrog rt mvn \
#            --build-name=scdf-samples/kafka-samples \
#            --build-number=$GITHUB_RUN_NUMBER \
#            -B clean install -DskipTests
#          jfrog rt build-publish
        working-directory: kafka-samples

      - name: Build multi-io-samples/ticktock
        run: ./mvnw -Dmaven.javadoc.skip=true clean install jib:dockerBuild -pl multi-output-time-rabbit,multi-input-log-rabbit,multi-output-time-kafka,multi-input-log-kafka
        working-directory: multi-io-samples/ticktock

      - name: Build multi-io-samples/purchase-orders/http-purchase-orders
        run: ./mvnw clean install jib:dockerBuild
        working-directory: multi-io-samples/purchase-orders/http-purchase-orders

      - name: Docker login Harbor
        run: docker login projects.registry.vmware.com -u '${{ secrets.dockerUser }}' -p '${{ secrets.dockerPass }}'
        working-directory: multi-io-samples/purchase-orders/http-purchase-orders

      - name: Docker push Multi IO sample - purchase-orders
        run: |
          docker tag springcloudstream/multi-io-sample-http-purchase-orders projects.registry.vmware.com/scdf/multi-io-sample-http-purchase-orders:1.0.0-SNAPSHOT
          docker image push projects.registry.vmware.com/scdf/multi-io-sample-http-purchase-orders:1.0.0-SNAPSHOT
        working-directory: multi-io-samples/purchase-orders/http-purchase-orders

#  publish:
#    needs: [build]
#    name: Call Publish Snapshot
#    uses: spring-cloud/spring-cloud-dataflow-samples/.github/workflows/ci-publish.yml@main
#    secrets:
#      jfArtifactorySpring: ${{ secrets.JF_ARTIFACTORY_SPRING }}
