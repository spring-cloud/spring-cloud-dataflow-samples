name: 'Sample App Publish'
description: 'Publishes a sample app to Artifactory'
inputs:
  app-dir:
    description: 'relative path to the app directory'
    required: true
  jf-server-id:
    description: 'JFrog server id'
    required: true
  jf-artifactory-spring:
    description: 'encoded JFrog server id configuration'
    required: true
  jf-mvn-build-commands:
    description: 'commands passed to \"jfrog rt mvn\" to publish the app'
    required: false
    default: '-B clean install -DskipTests'
  artifactory-repo-deploy-snapshots:
    description: 'which Artifactory repo to publish snapshot versions to (the \"--repo-deploy-snapshots\" arg passed to \"jfrog rt mvn\")'
    required: false
    default: 'libs-snapshot-local'
  artifactory-repo-deploy-releases:
    description: 'which Artifactory repo to publish non-snapshot versions to (the \"--repo-deploy-releases\" arg passed to \"jfrog rt mvn\")'
    required: false
    default: 'libs-milestone-local'
  gpg-passphrase:
    description: 'The passphrase of the gpg key to sign the artifacts with'
    required: false
  gpg-private-key:
    description: 'The gpg private key to sign the artifacts with'
    required: false

runs:
  using: "composite"
  steps:

    - uses: jfrog/setup-jfrog-cli@v3
      env:
        JF_URL: 'https://repo.spring.io'
        JF_ARTIFACTORY_SPRING: ${{ inputs.jf-artifactory-spring }}

    - name: Configure JFrog Cli
      shell: bash
      run: |
        jfrog mvnc \
          --server-id-resolve=${{ inputs.jf-server-id }} \
          --server-id-deploy=${{ inputs.jf-server-id }} \
          --repo-resolve-releases=libs-milestone \
          --repo-resolve-snapshots=libs-snapshot \
          --repo-deploy-releases=${{ inputs.artifactory-repo-deploy-releases }} \
          --repo-deploy-snapshots=${{ inputs.artifactory-repo-deploy-snapshots }}
        echo JFROG_CLI_BUILD_NAME=spring-cloud-dataflow-samples-task3 >> $GITHUB_ENV
        echo JFROG_CLI_BUILD_NUMBER=$GITHUB_RUN_NUMBER >> $GITHUB_ENV
      working-directory: ${{ inputs.app-dir }}

    - name: Print Build Info
      shell: bash
      run: |
        echo "::notice ::JFROG_CLI_BUILD_NAME=$JFROG_CLI_BUILD_NAME"
        echo "::notice ::JFROG_CLI_BUILD_NUMBER=$JFROG_CLI_BUILD_NUMBER"

    - name: Publish to Artifactory
      shell: bash
      env:
        MAVEN_GPG_PRIVATE_KEY: ${{ inputs.gpg-private-key }}
        MAVEN_GPG_PASSPHRASE: ${{ inputs.gpg-passphrase }}
      run: |
        if [ -n "$variable_name" ]; then
          echo "${MAVEN_GPG_PRIVATE_KEY}" > private.asc
          gpg --import --batch --no-tty private.asc
        fi
        jfrog mvn ${{ inputs.jf-mvn-build-commands }}
        jfrog rt build-publish
        echo "::info ::published ${{ inputs.app-dir }}"
      working-directory: ${{ inputs.app-dir }}
